@startuml
title Klassediagram: UC3 (Aktuatorenhed)


class Pumpe {
  - _dutyCycle : int
  - _state : bool
  - _GPIO : int

  +Pumpe(int GPIO, int duty
  Cycle, bool state)
  +pump(int ml, int dutyCycle): int
  +setState(bool) : void
  +getDutyCycle() : int
  +getState() : bool
}

class Varmelegeme {
  -_temperatur : double
  -_state : bool 
  -_GPIO : int

  +setTemperatur(double temperatur) : void
  +setState(bool) : void
}
class PID
{
  -_Kp : double
  -_Ki : double
  -_Kd : double
  -_deltaTime : double
  -_preError : double
  -_minOut : double
  -_maxOut : double

  +PID(double Kp, double Ki, double Kd, double dt, double preError, double minOut, double maxOut)
  +calculate(double setpoint, double measured, double resultBuffer) : int
  +setKp(double Kp) : void
  +setKi(double Kp) : void
  +setKd(double Kp) : void
  +getKp(void) : double
  +getKi(void) : double
  +getKd(void) : double
  +getOutput(void) : double
}

class UC3_Reguler {
  +run() : void 
}


class Aktuatorenhed
{
  -_volume : double
  -double _saltKonc : double
  -_saltvandspumpt : Pumpe *
  -_Demineraliseretvandpumpe : Pumpe * 
  -_Toemningspumpe : Pumpe * 
  -_varmelegeme : Varmelegeme *
  -_PID : PID *

  + Aktuatorenhed(double volume, double saltKonc)
  + addPsu(double psu) : int
  + subtractPsu(double psu, currentPsu) : int
  + addWater(double ml, double currentPsu) : int
  + removeWater(double ml) : int
  + setTemperatur(double temperatur, double currentTemperatur) :  int
  + ~Aktuatorenhed()
  - psuToMl(double psu, double currentPsu, double volume) : double

}

PID -- Aktuatorenhed
Aktuatorenhed -- UC3_Reguler
Pumpe "3" - "1" Aktuatorenhed
Aktuatorenhed - Varmelegeme


@enduml

