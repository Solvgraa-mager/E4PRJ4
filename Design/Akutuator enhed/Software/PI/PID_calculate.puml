@startuml PI_calculate
title int PI::calculate(double setpoint, double measured, double resultBuffer)

participant Varmelegeme
participant PI


Varmelegeme -> PI : calculate(setpoint, measured, resultBuffer)

PI -> PI : error = setpoint - measured

PI -> PI : integral = (Ts/2)*(error+pre_error)+pre_integral
note right : udregning af\nintegrale
PI -> PI : proportional = error
note right : udregning af\nproportional
PI -> PI : controlSignal = Kp*(proportional+(1/Ti)*integral)
note right : udregning af\nstyresignal

opt _out < _minOut
    PI -> PI : _out = _minOut
end
note right : Max, Min afgrÃ¦nsninger.\n0-100% dutycycle
opt _out > _maxOut
    PI -> PI : _out = _maxOut
end
PI -> PI :resultBuffer = _out
note right : return result
PI -> PI : pre_error = error\npre_integrale=integrale
note right : Opdater hukommelse for\nerror og integral

alt _out == _minOut
PI --> Varmelegeme : return -1
else _out == _maxOut
PI --> Varmelegeme : return -2
end
PI --> Varmelegeme : return 0

@enduml