@startuml SDtestSensorControllerSleep
title "Test: SensorController::sleep()"

skinparam shadowing false
skinparam MaxMessageSize 10000

actor UART as "UART Sniffer"
participant CCIF as "CentralComputerIF"
participant Test as "Test"
participant ADC as "ADCBlokIF"
actor "LED" as LED

sprite $interruptzigzag [16x16/16] {
    0000000000000000
    0000000000000000
    0000000000000000
    0000000000000000
    000FFFFFFFFFFF00
    000000000000F000
    00000000000F0000
    0000000000F00000
    000000000F000F00
    00000000F00000F0
    0000000FFFFFFFFF
    00000000000000F0
    0000000000000F00
    0000000000000000
    0000000000000000
    0000000000000000
    }

Test -> LED : Led on
== Run() ==
loop  power on
... Sleeping until request ...
UART -> Test : Request <$interruptzigzag>
Test -> LED : Led off
activate Test 
Test -> CCIF : getRequest()
deactivate Test
activate CCIF
CCIF --> Test : SensorNo
deactivate CCIF 
deactivate ADC
activate Test
Test -> ADC : read(SensorNo)
deactivate Test
activate ADC 
ADC --> Test : value
deactivate ADC 
activate Test 
Test -> CCIF : send(value)
activate CCIF
CCIF --> UART : value
CCIF --> Test :
deactivate Test 
deactivate CCIF
Test -> LED : Led on
Test -> Test : Sleep()
end loop







@enduml